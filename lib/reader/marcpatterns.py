'''
Declarations used to elucidate MARC model
'''
#Just set up some flags
#BOUND_TO_WORK = object()
#BOUND_TO_INSTANCE = object()

#Full MARC field list: http://www.loc.gov/marc/bibliographic/ecbdlist.html

#This line must be included
from bibframe.reader.util import *

#from bibframe.reader.marcpatterns import *
#sorted([ (m, MATERIALIZE[m]) for m in MATERIALIZE if [ wf for wf in WORK_FIELDS if m[:2] == wf[:2]] ])

#    '100': fromwork.materialize('Agent', 'creator', unique=all_subfields, mr_properties={'a': 'label'}),

# where do we put LDR info, e.g. LDR 07 / 19 positions = mode of issuance
#Don't do a simple field renaming of ISBN because

TRANSFORMS = {
    #Link to the 010a value, naming the relationship 'lccn'
    '010$a': fromwork.rename(rel='lccn'),
    '017$a': fromwork.rename(rel='legalDeposit'),
    #ISBN is specially processed
    #'020$a': frominstance.rename(rel='isbn'),
    '022$a': frominstance.rename(rel='issn'),
    '024$a': fromwork.rename(rel='otherControlNumber'),
    '025$a': fromwork.rename(rel='lcOverseasAcq'),

    '034$a': fromwork.rename(rel='cartographicMathematicalDataScaleStatement'),  #Rebecca & Sally suggested this should effectively be a merge with 034a
    '034$b': fromwork.rename(rel='cartographicMathematicalDataProjectionStatement'),
    '034$c': fromwork.rename(rel='cartographicMathematicalDataCoordinateStatement'),
    '035$a': fromwork.rename(rel='systemControlNumber'),
    '037$a': fromwork.rename(rel='stockNumber'),

    '040$a': fromwork.rename(rel='catalogingSource'),
    '041$a': fromwork.rename(rel='language'),
    '050$a': fromwork.rename(rel='lcCallNumber'),
    '050$b': fromwork.rename(rel='lcItemNumber'),
    '050$3': fromwork.rename(rel='material'),
    '060$a': frominstance.rename(rel='nlmCallNumber'),
    '060$b': frominstance.rename(rel='nlmItemNumber'),
    '061$a': fromwork.rename(rel='nlmCopyStatement'),
    '070$a': frominstance.rename(rel='nalCallNumber'),
    '070$b': frominstance.rename(rel='nalItemNumber'),
    '071$a': fromwork.rename(rel='nalCopyStatement'),
    '082$a': fromwork.rename(rel='deweyNumber'),

    '130$l': fromwork.rename(rel='language'),
    '210$a': frominstance.rename(rel='abbreviatedTitle'),
    '222$a': frominstance.rename(rel='keyTitle'),
    '240$d': fromwork.rename(rel='legalDate'),
    '240$h': fromwork.rename(rel='medium'),
    '240$m': fromwork.rename(rel='musicMedium'),
    '240$r': fromwork.rename(rel='musicKey'),
    '245$a': fromwork.rename(rel='title'),
    '245$b': fromwork.rename(rel='subtitle'),
    '245$c': fromwork.rename(rel='statement'),
    '245$f': fromwork.rename(rel='inclusiveDates'),
    '245$h': fromwork.rename(rel='medium'),
    '245$k': fromwork.rename(rel='formDesignation'),
    '246$a': fromwork.rename(rel='titleVariation'),
    '246$f': fromwork.rename(rel='titleVariationDate'),
    '247$a': fromwork.rename(rel='formerTitle'),
    '250$a': frominstance.rename(rel='edition'),
    '250$b': frominstance.rename(rel='edition'),
    '254$a': frominstance.rename(rel='musicalPresentation'),
    '255$a': frominstance.rename(rel='cartographicMathematicalDataScaleStatement'),
    '255$b': frominstance.rename(rel='cartographicMathematicalDataProjectionStatement'),
    '255$c': frominstance.rename(rel='cartographicMathematicalDataCoordinateStatement'),
    '256$a': frominstance.rename(rel='computerFilecharacteristics'),
#    '260$a': frominstance.rename(rel='providerPlace'),
#    '260$b': frominstance.rename(rel='providerAgent'),
    '260$c': frominstance.rename(rel='providerDate'),
    '260$g': frominstance.rename(rel='providerDate'),
    '264$c': fromwork.rename(rel='providerDate'),
    '730$a': fromwork.rename(rel='label'),
    '830$a': fromwork.rename(rel='title'),

    #Field 100 has a creator relationship to a new Agent object (only created as a new object if all subfields are unique)
    '100': fromwork.materialize('Agent', 'creator', unique=all_subfields, mr_properties={'name': subfield('a'), 'numeration': subfield('b'), 'titles': subfield('c'), 'date': subfield('d')}),
    '110': fromwork.materialize('Organization', 'creator', unique=all_subfields, mr_properties={'name': subfield('a'), 'date': subfield('d')}),
    '111': fromwork.materialize('Meeting', 'creator', unique=all_subfields, mr_properties={'name': subfield('a'), 'date': subfield('d')}),

    '130': fromwork.materialize('Collection', 'creator', unique=all_subfields, mr_properties={'title': subfield('a'), 'workSection': subfield('n')}),
    '240$a': fromwork.materialize('Collection', 'creator', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '243$a': fromwork.materialize('Collection', 'creator', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '730': fromwork.materialize('Collection', 'creator', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '830': fromwork.materialize('Collection', 'creator', unique=all_subfields, mr_properties={'name': subfield('a')}),

    '260': frominstance.materialize('ProviderEvent', 'publication', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '264': fromwork.materialize('ProviderEvent', 'GRIPPO', unique=all_subfields, mr_properties={'name': subfield('a')}),
    #Ind1 is blank ('x') ind2 is 0
    '264-#3': fromwork.materialize('ProviderEvent', 'manufacture', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '264-#2': fromwork.materialize('ProviderEvent', 'distribution', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '264-#1': fromwork.materialize('ProviderEvent', 'publication', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '264-#0': fromwork.materialize('ProviderEvent', 'production', unique=all_subfields, mr_properties={'name': subfield('a')}),

    '260$a': frominstance.materialize('Place', 'providerAgent', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '260$b': frominstance.materialize('Agent', 'providerAgent', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '260$e': frominstance.materialize('Place', 'providerAgent', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '260$f': frominstance.materialize('Agent', 'providerAgent', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '264$a': fromwork.materialize('Place', 'providerAgent', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '264$b': fromwork.materialize('Agent', 'providerAgent', unique=all_subfields, mr_properties={'name': subfield('a')}),

    #'300': fromwork.materialize('Measurement', 'physicalDescription', unique=all_subfields, mr_properties={'name': subfield('a')}),

    '600': fromwork.materialize('Person', 'subject', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '610': fromwork.materialize('Organization', 'subject', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '611': fromwork.materialize('Meeting', 'subject', unique=all_subfields, mr_properties={'name': subfield('a')}),

    '630': fromwork.materialize('Title', 'uniformTitle', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '650': fromwork.materialize('Topic', 'subject', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '651': fromwork.materialize('Geographic', 'subject', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '655': fromwork.materialize('Genre', 'genre', unique=all_subfields, mr_properties={'name': subfield('a')}),

    '700': fromwork.materialize('Person', 'contributor', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '710': fromwork.materialize('Organization', 'contributor', unique=all_subfields, mr_properties={'name': subfield('a')}),
    '711': fromwork.materialize('Meeting', 'contributor', unique=all_subfields, mr_properties={'name': subfield('a')}),

    #HeldItem is a refinement of Annotation
    '852': frominstance.materialize('HeldItem', 'institution', unique=all_subfields, mr_properties={'holderType': 'Library', 'location': subfield('a'), 'subLocation': subfield('b'), 'callNumber': subfield('h'), 'code': subfield('n'), 'link': subfield('u'), 'streetAddress': subfield('e')}),

    #A refinement is a relationship from one mapping to another in order to refine
    #Replaces the 700a value by looking up 700e
    #'700$a': fromwork.refinement(normalizeparse, rel=subfield('e')),

    '880$a': fromwork.rename(rel='title'),
    '856$u': frominstance.rename(rel='link'),
}



FIELD_RENAMINGS = {
'300$a': 'extent',
'300$b': 'otherPhysicalDetails',
'300$c': 'dimensions',
'300$e': 'accompanyingMaterial',
'300$f': 'typeOfunit',
'300$g': 'size',
'300$3': 'materials',
'310$a': 'publicationFrequency',
'310$b': 'publicationDateFrequency',
'336$a': 'contentCategory',
'336$b': 'contentTypeCode',
'336$2': 'contentTypeRDAsource',
'337$a': 'mediaCategory',
'337$b': 'mediaTypeCode',
'337$2': 'medaiRDAsource',
'338$a': 'carrierCategory',
'338$b': 'carrierCategoryCode',
'338$2': 'carrierRDASource',
'340$a': 'physicalSubstance',
'340$b': 'dimensions',
'340$c': 'materialsApplied',
'340$d': 'recordingTechnique',
'340$e': 'physicalSupport',
'351$a': 'orgazationMethod',
'351$b': 'arrangement',
'351$c': 'hierarchy',
'351$3': 'materialsSpec',
'490$a': 'seriesStatement',
'490$v': 'seriesVolume',
'500$a': 'note',
'501$a': 'note',
'502$a': 'dissertationNote',
'502$b': 'degree',
'502$c': 'grantingInstitution',
'502$d': 'dissertationYear',
'502$g': 'dissertationNote', 
'502$o': 'dissertationID',
'504$a': 'bibliographyNote',
'505$a': 'contentsNote',
'506$a': 'governingAccessNote',
'506$b': 'jurisdictionNote',
'506$c': 'physicalAccess',
'506$d': 'authorizedUsers',
'506$e': 'authorization',
'506$u': 'uriNote',
'507$a': 'representativeFractionOfScale',
'507$b': 'remainderOfScale',
'508$a': 'creditsNote',
'510$a': 'citationSource', 
'510$b': 'citationCoverage',
'510$c': 'citationLocationWithinSource',
'510$u': 'citationUri',
'511$a': 'performerNote',
'513$a': 'typeOfReport',
'513$b': 'periodCoveredn',
'514$a': 'dataQuality',
'515$a': 'numberingPerculiarities', 
'516$a': 'typeOfComputerFile',
'518$a': 'dateTimePlace',
'518$d': 'dateOfEvent',
'518$o': 'otherEventInformation', 
'518$p': 'placeOfEvent',
'520$a': 'summary',
'520$b': 'summaryExpansion',
'520$c': 'assigningSource',
'520$u': 'summaryURI',
'521$a': 'intendedAudience',
'521$b': 'intendedAudienceSource', 
'522$a': 'geograhpicCoverage',
'525$a': 'supplement',
'538$a': 'systemDetails',
'526$a': 'studyProgramName',
'526$b': 'interestLevel',
'526$c': 'readingLevel',
'530$a': 'additionalPhysicalForm',
'533$a': 'reproductionNote',
'534$a': 'originalVersionNote',
'535$a': 'locationOfOriginalsDuplicates',
'536$a': 'fundingInformation',
'538$a': 'systemDetails',
'540$a': 'termsGoverningUse',
'541$a': 'immediateSourceOfAcquisition',
'542$a': 'informationRelatingToCopyrightStatus',
'544$a': 'locationOfOtherArchivalMaterial',
'545$a': 'biographicalOrHistoricalData',
'546$a': 'languageNote',
'547$a': 'formerTitleComplexity',
'550$a': 'issuingBody',
'552$a': 'entityAndAttributeInformation',
'555$a': 'cumulativeIndexFindingAids',
'556$a': 'informationAboutDocumentation',
'561$a': 'ownership', 
'583$a': 'action',
'600$a': 'label',
'600$d': 'date',
'610$a': 'label',
'610$d': 'date',  #Note: there has been discussion about removing this, but we are not sure we get reliable ID.LOC lookups without it.  If it is removed, update augment.py 
'650$a': 'label',
'650$d': 'date',
'651$a': 'label',
'651$d': 'date',
'630$a': 'uniformTitle',
'630$l': 'language',
'630$a': 'label',
'630$h': 'medium',
'630$v': 'formSubdivision',
'630$x': 'generalSubdivision',
'630$y': 'chronologicalSubdivision',
'630$z': 'geographicSubdivision',
'650$a': 'label',
'650$c': 'locationOfEvent',
'650$v': 'formSubdivision',
'650$x': 'generalSubdivision',
'650$y': 'chronologicalSubdivision',
'650$z': 'geographicSubdivision',
'651$v': 'formSubdivision',
'651$x': 'generalSubdivision',
'651$y': 'chronologicalSubdivision',
'651$z': 'geographicSubdivision',
'655$a': 'label',
'655$2': 'source', #Note: use this to trigger link authority lookup
'700$a': 'label',
'700$b': 'numeration',
'700$c': 'titles',
'700$d': 'date',  #Note: there has been discussion about removing this, but we are not sure we get reliable ID.LOC lookups without it.  If it is removed, update augment.py 
'710$a': 'label',
'710$d': 'date',
'711$a': 'label',
'711$d': 'date',
}


WORK_FIELDS = set([
'010',
'028',
'035',
'040',
'041',
'050a', #Note: should be able to link directly to authority @ id.loc.gov authority/classification/####
'082',
'100',
'110',
'111',
'130',
'210',
'222',
'240',
'243',
'245',
'246',
'264',
'247',
'310',
'310',
'321',
'321',
'362',
'490',
'500',
'502',
'504',
'510',
'511',
'513',
'514',
'518',
'520',
'521',
'522',
'583',
'600',
'610',
'611',
'630',
'650',
'651',
'700',
'710',
'711',
'730',
'740',
'880',
])


INSTANCE_FIELDS = set([
'020',
'022',
'055',
'060',
'070',
'086',
'210',
'222',
'250',
'254',
'255',
'256',
'257',
'260',
'263',
'300',
'310',
'340',
'351',
'306',
'340',
'336',
'337',
'338',
'351',
'505',
'506',
'507',
'508',
'515',
'516',
'525',
'530',
'538',
'561',
'850',
'852',
'856',
])

ANNOTATIONS_FIELDS = set([
'852a',
'852b',
'852h',
'852n',
'852u',
'852e',
])

PROVIDER_EVENT_FIELDS = set([
'260a',
'260b',
'260c',
'260e',
'260f',
'260g',
'264a',
'264b',
'264c',
])

HOLDINGS_FIELDS = set([
'852',
])

